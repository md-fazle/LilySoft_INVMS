// <auto-generated />
using System;
using LilySoft_INVMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LilySoft_INVMS.Migrations.InvmsDb
{
    [DbContext(typeof(InvmsDbContext))]
    partial class InvmsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("catagory_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("catagory_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("catagory_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("customer_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("customer_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.CustomerContact", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("contact_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact_phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_contact_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("customer_id");

                    b.ToTable("CustomerContacts");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.CustomerReturn", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Customer_return_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Customerid")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("order_id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("Customerid");

                    b.HasIndex("order_id");

                    b.ToTable("CustomerReturns");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.CustomerReturnDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("customer_return_detail_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_return_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("product_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("total_price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("unit_price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("customer_return_id");

                    b.HasIndex("product_id");

                    b.ToTable("CustomerReturnDetails");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("customer_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("orderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("order_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("customer_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.OrderDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("order_detail_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("order_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("product_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("total_price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("unit_price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("order_id");

                    b.HasIndex("product_id");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.PODetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("po_detail_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("purchase_order_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("total_price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("unit_price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("purchase_order_id");

                    b.ToTable("PODetails");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.PRDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("pr_detail_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("purchase_request_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("total_price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("unit_price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("purchase_request_id");

                    b.ToTable("PRDetails");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("catagory_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("product_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("product_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("product_price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("catagory_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.PurchaseOrder", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Supplierid")
                        .HasColumnType("int");

                    b.Property<DateTime>("purchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("purchase_order_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("Supplierid");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.PurchaseRequest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("purchase_request_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.ToTable("PurchaseRequests");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Stock", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("last_updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("product_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("stock_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("warehouse_id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("warehouse_id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Supplier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("supplier_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("supplier_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.SupplierContact", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("contact_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact_phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supplier_contact_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supplier_id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("supplier_id");

                    b.ToTable("SupplierContacts");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.SupplierReturn", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("Purchase_ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Supplierid")
                        .HasColumnType("int");

                    b.Property<string>("purchase_order_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("supplier_return_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("Supplierid");

                    b.HasIndex("purchase_order_id");

                    b.ToTable("SupplierReturns");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.SupplierReturnDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Supplier_return_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("product_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("total_price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("unit_price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("Supplier_return_id");

                    b.HasIndex("product_id");

                    b.ToTable("SupplierReturnDetails");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Warehouse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("warehouse_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("warehouse_location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("warehouse_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.CustomerContact", b =>
                {
                    b.HasOne("LilySoft_INVMS.Models.Invms.Customer", "Customer")
                        .WithMany("customerContacts")
                        .HasForeignKey("customer_id")
                        .HasPrincipalKey("customer_id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.CustomerReturn", b =>
                {
                    b.HasOne("LilySoft_INVMS.Models.Invms.Customer", null)
                        .WithMany("CustomerReturns")
                        .HasForeignKey("Customerid");

                    b.HasOne("LilySoft_INVMS.Models.Invms.Order", "Order")
                        .WithMany("CustomerReturns")
                        .HasForeignKey("order_id")
                        .HasPrincipalKey("order_id");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.CustomerReturnDetail", b =>
                {
                    b.HasOne("LilySoft_INVMS.Models.Invms.CustomerReturn", "CustomerReturn")
                        .WithMany("CustomerReturnDetails")
                        .HasForeignKey("customer_return_id")
                        .HasPrincipalKey("Customer_return_id");

                    b.HasOne("LilySoft_INVMS.Models.Invms.Product", "Product")
                        .WithMany("CustomerReturnDetails")
                        .HasForeignKey("product_id")
                        .HasPrincipalKey("product_id");

                    b.Navigation("CustomerReturn");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Order", b =>
                {
                    b.HasOne("LilySoft_INVMS.Models.Invms.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("customer_id")
                        .HasPrincipalKey("customer_id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.OrderDetail", b =>
                {
                    b.HasOne("LilySoft_INVMS.Models.Invms.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("order_id")
                        .HasPrincipalKey("order_id");

                    b.HasOne("LilySoft_INVMS.Models.Invms.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("product_id")
                        .HasPrincipalKey("product_id");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.PODetail", b =>
                {
                    b.HasOne("LilySoft_INVMS.Models.Invms.Product", "Product")
                        .WithMany("PODetails")
                        .HasForeignKey("product_id")
                        .HasPrincipalKey("product_id");

                    b.HasOne("LilySoft_INVMS.Models.Invms.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PODetails")
                        .HasForeignKey("purchase_order_id")
                        .HasPrincipalKey("purchase_order_id");

                    b.Navigation("Product");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.PRDetail", b =>
                {
                    b.HasOne("LilySoft_INVMS.Models.Invms.Product", "Product")
                        .WithMany("PRDetails")
                        .HasForeignKey("product_id")
                        .HasPrincipalKey("product_id");

                    b.HasOne("LilySoft_INVMS.Models.Invms.PurchaseRequest", "PurchaseRequest")
                        .WithMany("PRDetails")
                        .HasForeignKey("purchase_request_id")
                        .HasPrincipalKey("purchase_request_id");

                    b.Navigation("Product");

                    b.Navigation("PurchaseRequest");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Product", b =>
                {
                    b.HasOne("LilySoft_INVMS.Models.Invms.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("catagory_id")
                        .HasPrincipalKey("catagory_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.PurchaseOrder", b =>
                {
                    b.HasOne("LilySoft_INVMS.Models.Invms.Supplier", null)
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("Supplierid");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Stock", b =>
                {
                    b.HasOne("LilySoft_INVMS.Models.Invms.Product", "Product")
                        .WithMany("Stocks")
                        .HasForeignKey("product_id")
                        .HasPrincipalKey("product_id");

                    b.HasOne("LilySoft_INVMS.Models.Invms.Warehouse", "Warehouse")
                        .WithMany("Stocks")
                        .HasForeignKey("warehouse_id")
                        .HasPrincipalKey("warehouse_id");

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.SupplierContact", b =>
                {
                    b.HasOne("LilySoft_INVMS.Models.Invms.Supplier", "Supplier")
                        .WithMany("SupplierContacts")
                        .HasForeignKey("supplier_id")
                        .HasPrincipalKey("supplier_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.SupplierReturn", b =>
                {
                    b.HasOne("LilySoft_INVMS.Models.Invms.Supplier", null)
                        .WithMany("SupplierReturns")
                        .HasForeignKey("Supplierid");

                    b.HasOne("LilySoft_INVMS.Models.Invms.PurchaseOrder", "PurchaseOrder")
                        .WithMany("SupplierReturns")
                        .HasForeignKey("purchase_order_id")
                        .HasPrincipalKey("purchase_order_id");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.SupplierReturnDetail", b =>
                {
                    b.HasOne("LilySoft_INVMS.Models.Invms.SupplierReturn", "SupplierReturn")
                        .WithMany("SupplierReturnDetails")
                        .HasForeignKey("Supplier_return_id")
                        .HasPrincipalKey("supplier_return_id");

                    b.HasOne("LilySoft_INVMS.Models.Invms.Product", "Product")
                        .WithMany("SupplierReturnDetails")
                        .HasForeignKey("product_id")
                        .HasPrincipalKey("product_id");

                    b.Navigation("Product");

                    b.Navigation("SupplierReturn");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Customer", b =>
                {
                    b.Navigation("CustomerReturns");

                    b.Navigation("Orders");

                    b.Navigation("customerContacts");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.CustomerReturn", b =>
                {
                    b.Navigation("CustomerReturnDetails");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Order", b =>
                {
                    b.Navigation("CustomerReturns");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Product", b =>
                {
                    b.Navigation("CustomerReturnDetails");

                    b.Navigation("OrderDetails");

                    b.Navigation("PODetails");

                    b.Navigation("PRDetails");

                    b.Navigation("Stocks");

                    b.Navigation("SupplierReturnDetails");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.PurchaseOrder", b =>
                {
                    b.Navigation("PODetails");

                    b.Navigation("SupplierReturns");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.PurchaseRequest", b =>
                {
                    b.Navigation("PRDetails");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Supplier", b =>
                {
                    b.Navigation("PurchaseOrders");

                    b.Navigation("SupplierContacts");

                    b.Navigation("SupplierReturns");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.SupplierReturn", b =>
                {
                    b.Navigation("SupplierReturnDetails");
                });

            modelBuilder.Entity("LilySoft_INVMS.Models.Invms.Warehouse", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
